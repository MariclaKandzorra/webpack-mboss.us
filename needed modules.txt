1. mkdir <app-name>
2. cd <app-name>
3. install node
4. npm init
5. npm i --save-dev webpack@latest webpack-cli@latest webpack-dev-server@latest
6. npm i --save-dev @babel/core@latest @babel/preset-react@latest @babel/preset-env@latest  babel-plugin-wrap-in-js@latest 
7. npm i --save-dev postcss@latest postcss-preset-env@latest
8. npm i --save next@latest tailwindcss@latest autoprefixer
9. npm i --save sass@latest @heroicons/react@latest
10. npm i --save-dev style-loader@latest css-loader@latest url-loader@latest babel-loader@latest img-loader@latest json-loader@latest postcss-loader@latest sass-loader@latest
11. npm i --save-dev babel-plugin-module-resolver@latest
12. npm i --save-dev generate-json-webpack-plugin@latest html-webpack-plugin@latest
13. npm i --save-dev react@latest react-dom@latest
14. npm i --save @emotion/react@latest @emotion/styled@latest @mui/material@latest @mui/x-date-pickers@latest
latest @mui/x-date-pickers@latest
15. npm i --save-dev raw-loader@latest json-import-loader@latest docx-loader@latest html-loader@latest
16. npm i --save-dev react-date-range@latest date-fns date-fns-tz@latest @badrap/bar-of-progress@latest
17. npm i --save-dev ngx-extended-pdf-viewer@latest docx@latest officeparser@latest parse-json@latest
18. npm i --save-dev @chakra-ui/react@latest eslint@latest eslint-config-next@latest
19. npm i --save-dev webpack-merge@latest lodash@latest  
20. npm i --save-dev vue-loader@latest  clean-webpack-plugin@latest
21. npm i --save mini-css-extract-plugin@latest css-minimizer-webpack-plugin@latest

---------------------------------------
npx tailwindcss init -p

tailwind-config.js  
module.exports = {
  content: [
    "./pages/**/*.{js,ts,jsx,tsx}",
    "./components/**/*.{js,ts,jsx,tsx}",
  ],
  theme: {
    extend: {},
  },
  plugins: [],
}
-----------------------------------------
globals.css

@tailwind base;
@tailwind components;
@tailwind utilities;

----------------------------------------
landing.js

export default function Home() {
  return (
    <h1 className="text-3xl font-bold underline">
      Hello world!
    </h1>
  )
}


Quick setup — if you’ve done this kind of thing before
or	
git@github.com:MariclaKandzorra/webpack-mboss.us.git
Get started by creating a new file or uploading an existing file. We recommend every repository include a README, LICENSE, and .gitignore.
git@github.com:MariclaKandzorra/webpack-mboss.us.git
https://github.com/MariclaKandzorra/webpack-mboss.us.git

…or create a new repository on the command line
echo "# webpack-mboss.us" >> README.md

git init
git add README.md
git commit -m "first commit"
git branch -M main
git remote add origin git@github.com:MariclaKandzorra/webpack-mboss.us.git
git push -u origin main

…or push an existing repository from the command line

git remote add origin git@github.com:MariclaKandzorra/webpack-mboss.us.git
git branch -M main
git push -u origin main

…or import code from another repository
You can initialize this repository with code from a Subversion, Mercurial, or TFS project.

 
